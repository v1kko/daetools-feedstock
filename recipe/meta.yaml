{% set name = "daetools" %}
{% set version = "1.9.3" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://github.com/v1kko/daetools/archive/v{{ version }}.tar.gz 
  sha256: 86022590cc541ad05af40f5df313bd6aaad1c7083edde34089d315cc48d18b48

build:
  number: 7
# script: #Use the complex build.sh

# superlu dependency is not (yet) available on windows. skip windows build for now
# build for osx needs osx knowledge, skip osx build for now 
  skip: True  # [not linux]


requirements:
  build:
    - {{ compiler('cxx') }}
    - python

  host:
    - python
    - pip
    - coolprop
    - qt-main
    - make
    - cmake
    - boost
    - boost-cpp
    - superlu
#   - sundials Not yet ... Upgrade interface from IDAS (1.3.0) to current version of Sundials (5.4.1)
    - libopenblas
    - libgfortran5
    - _openmp_mutex
    - blas
    - lapack
    - mkl
#   Python bindings
    - numpy 
    - scipy
    - matplotlib
    - lxml
    - pandas
    - openpyxl
    - setuptools
    - et-xmlfile

  run:
    - python
    - coolprop
    - qt-main
    - boost
    - boost-cpp
    - superlu
#   - sundials Not yet ... Upgrade interface from  IDAS (1.3.0) to current version of Sundials (5.4.1)
    - libopenblas
    - libgfortran5
    - _openmp_mutex
    - blas
    - lapack
#   Python bindings
    - numpy 
    - scipy
    - matplotlib
    - lxml
    - pandas
    - openpyxl
    - et-xmlfile

test:
  commands:
#   The testing is a bit broken, for now we directly run them here
    - python -m "daetools.unit_tests.tests_object"
    - python -m "daetools.unit_tests.tests_parameter"
    - python -m "daetools.unit_tests.tests_jacobian_expressions"
    - python -m "daetools.unit_tests.tests_numpy_ufuncs"

about:
  home: https://github.com/v1kko/daetools
  license: GPL-3.0-only
  license_family: GPL
  license_file: licence.txt
  summary: 'DAE Tools: equation-based object-oriented modelling, simulation and optimisation software'
  description: |
    DAE Tools is a cross-platform equation-based object-oriented modelling, simulation and optimisation software. It is not a modelling language nor a collection of numerical libraries but rather a higher level structure â€“ an architectural design of interdependent software components providing an API for 
    - Model development/specification
    - Activities on developed models, such as simulation, optimisation, sensitivity analysis and parameter estimation
    - Processing of the results, such as plotting and exporting to various file formats
    - Report generation
    - Code generation, co-simulation and model exchange

  doc_url: https://daetools.com
  dev_url: https://github.com/v1kko/daetools

extra:
  recipe-maintainers:
    - v1kko
